#!/usr/bin/env ruby
# encoding: UTF-8

## ruby -e "$(curl -fsSL raw.github.com/maciejczyzewski/hyhyhy/master/install)"

###############################################################################
#                                       _           _           _             #
#  Project                             | |         | |         | |            #
#                                      | |__  _   _| |__  _   _| |__  _   _   #
#  Copyright (C) 2005 - 2015,          | '_ \| | | | '_ \| | | | '_ \| | | |  #
#  Maciej A. Czyzewski,                | | | | |_| | | | | |_| | | | | |_| |  #
#  <maciejanthonyczyzewski@gmail.com>  |_| |_|\__, |_| |_|\__, |_| |_|\__, |  #
#                                              __/ |       __/ |       __/ |  #
#                                             |___/       |___/       |___/   #
#                                                                             #
#  This software is licensed as described in the file LICENSE, which          #
#  you should have received as part of this distribution.                     #
#                                                                             #
###############################################################################

# This script installs to /usr/local only. To install elsewhere you can just
# untar https://github.com/maciejczyzewski/hyhyhy/tarball/master
# anywhere you like or change the value of HYHYHY_PREFIX.

HYHYHY_PREFIX = '/usr/local'
HYHYHY_REPO = 'https://github.com/maciejczyzewski/hyhyhy'
HYHYHY_BRANCH = 'feature'

# FIXME: it should be a little bit improved!
HYHYHY_DEPS = [
  ['.'],
  # Bower/Github (javascript)
  ['js',  'katex',
   'https://github.com/Khan/KaTeX/releases/download/v0.1.1/katex.tar.gz'],
  ['js',  'metricsgraphics',
   'https://github.com/mozilla/metrics-graphics/archive/v2.1.0.tar.gz'],
  ['js',  'rainbow',
   'https://github.com/ccampbell/rainbow/archive/1.1.9.tar.gz'],
  # Github (css)
  ['css', 'animate',
   'https://github.com/daneden/animate.css/archive/3.2.0.tar.gz'],
  # RubyGems (ruby)
  ['rb',  'commander',
   'https://github.com/tj/commander'],
  ['rb',  'maruku',
   'https://github.com/bhollis/maruku'],
  ['rb',  'listen',
   'https://github.com/guard/listen'],
]

# =============================================================================
# UTILITIES
# =============================================================================

# Module: Colors in console
module Color extend self
  def blue; bold 34; end
  def green; bold 32; end
  def white; bold 39; end
  def red; underline 31; end
  def reset; escape 0; end
  def bold n; escape "1;#{n}" end
  def underline n; escape "4;#{n}" end
  def escape n; "\033[#{n}m" if STDOUT.tty? end
end

# Module: Split version to number
module Version
  def <=>(other)
    split(".").map { |i| i.to_i } <=> other.split(".").map { |i| i.to_i }
  end
end

# Class: Improve shell arguments
class Array
  def shell_s
    cp = dup
    first = cp.shift
    cp.map{ |arg| arg.gsub " ", "\\ " }.unshift(first) * " "
  end
end

# Function: normal output (blue color)
#   ohai "My full name is Maciej Anthony Czyzewski!"
def ohai *args
  puts "#{Color.blue}==>#{Color.white} #{args.shell_s}#{Color.reset}"
end

# Function: warning output (underline + red color)
#   warn "#{Color.white}hyhyhy#{Color.reset} is not installed!"
def warn warning
  puts "#{Color.red}Warning#{Color.reset}: #{warning.chomp}"
end

# Function: bash output during process
#   bash "/usr/bin/mkdir", "hyhyhy"
def bash *args
  abort "Failed during: #{args.shell_s}" unless Kernel.system(*args)
end

# Function: run commands with permissions
#   sudo "/bin/chmod", "o-w", HYHYHY_PREFIX
def sudo *args
  bash "sudo", *args
end

# Function: asks the question
#   ask "Are you ready for that?"
def ask question
  if (STDIN.tty? or STDIN.eof?) and ARGV[0] != '-q'
    while true
      print "#{Color.white}==>#{Color.reset} #{question} [Y/n]: "
      case gets.strip
        when 'Y', 'y', 'j', 'J', 'yes'
          return true
        when /\A[nN]o?\Z/
          return false
      end
    end
  else
    # Do not ask, anything agrees.
    # This improves the tests. (Travis)
    return true
  end
end

# Function: cross-platform way of finding an executable in the $PATH.
#   which ruby  #=> /usr/bin/ruby
def which cmd
  exts = ENV['PATHEXT'] ? ENV['PATHEXT'].split(';') : ['']
  ENV['PATH'].split(File::PATH_SEPARATOR).each do |path|
    exts.each { |ext|
      exe = File.join(path, "#{cmd}#{ext}")
      return exe if File.executable?(exe) && !File.directory?(exe)
    }
  end
  return nil # Nothing, not installed
end

# =============================================================================
# COMPATIBILITY
# =============================================================================

# Invalidate sudo timestamp before exiting
at_exit { Kernel.system "sudo", "-k" }

# The block form of Dir.chdir fails later if Dir.CWD doesn't exist which I
# guess is fair enough. Also sudo prints a warning message for no good reason
Dir.chdir "/usr"

# Save paths, preliminary analysis
RUBY = which 'ruby'
GEM  = which 'gem'

# Abort, if there is no ruby or gem
abort "Oh My God! Script needs ruby and gem to work properly." if
      RUBY == nil or GEM == nil

# Abort, if ruby version is to old (>= 1.9.3)
abort "Oh My God! Requires ruby version >= 1.9.3" if
      `#{RUBY} -e "puts RUBY_VERSION"`.split('.')[0,3].join.to_i < 193

# =============================================================================
# INSTALLER
# =============================================================================

# Show ASCII
puts "#{Color.green} _           _           _
| |         | |         | |
| |__  _   _| |__  _   _| |__  _   _
| '_ \\| | | | '_ \\| | | | '_ \\| | | |
| | | | |_| | | | | |_| | | | | |_| |
|_| |_|\\__, |_| |_|\\__, |_| |_|\\__, |
        __/ |       __/ |       __/ |
       |___/       |___/       |___/ #{Color.reset}"
puts "  #{Color.underline 35}github.com/maciejczyzewski/hyhyhy#{Color.reset}"
puts ""

# Anticipates
ohai "This script will prepare:"

# Structure
puts "Executable: #{HYHYHY_PREFIX}/bin/hyhyhy" # executable
puts "Directory: #{HYHYHY_PREFIX}/hyhyhy/..."  # files & cache

# Anticipates
ohai "This script will install:"

# Packages
puts "Packages: " + HYHYHY_DEPS.reverse.collect{ |d| d[1] }.join(", ")[0..-3]

# Ask
abort unless ask "Are you ready for that?"

# Improve permissions
sudo "chmod", "o-w", HYHYHY_PREFIX

# Create main directory
Dir.chdir HYHYHY_PREFIX do
  # Remove old file
  sudo "rm", "-f", "bin/hyhyhy"
  sudo "rm", "-rf", "hyhyhy/lib"

  # Create directories
  sudo "mkdir", "-p", "bin"
  sudo "mkdir", "-p", "hyhyhy"

  # Improve permissions
  sudo "chmod", "777", "hyhyhy" # g+rwx eeyy?
end

# Download files from repository
Dir.chdir "#{HYHYHY_PREFIX}/hyhyhy" do
  # Here comes the party
  ohai "Downloading and installing hyhyhy..."

  HYHYHY_DEPS.each do |dependency|
    # 0 - type, 1 - name, 2 - repository

    ohai "Downloading and installing #{dependency[1]}..." unless
         dependency[0] == '.'

    case dependency[0]
    when 'js', 'css'
      bash "mkdir", "-p", "lib/#{dependency[1]}"

      Dir.chdir "#{HYHYHY_PREFIX}/hyhyhy/lib/#{dependency[1]}" do
        bash "bash -o pipefail -c 'curl -fSL -# " \
             "#{dependency[2]} | " \
             "tar xz -m --strip 1'"
      end
    when 'rb'
      sudo GEM, "install", dependency[1]
    else
      bash "bash -o pipefail -c 'curl -fSL -# " \
           "#{HYHYHY_REPO}/tarball/#{HYHYHY_BRANCH} | " \
           "tar xz -m --strip 1'"
    end
  end

  # Add environment
  File.open('.bash_profile', 'w') {
    |file| file.write("export RUBY_PATH=\"#{RUBY}\"")
  }
end

# Copy executable script
Dir.chdir HYHYHY_PREFIX do
  sudo "cp", "-p", "hyhyhy/bin/hyhyhy", "bin/hyhyhy"

  # Repair problems with permissions
  sudo "chmod", "u+rwx", "bin/hyhyhy"
end

# Ooopppss?!
warn "#{HYHYHY_PREFIX}/bin is not in your PATH." unless
     ENV['PATH'].split(':').include? "#{HYHYHY_PREFIX}/bin"

# Good news
ohai "Installation successful!"

# A little bit of culture...
puts "Run `hyhyhy help` to get started. Check homepage for more informations!"